{{- if .Values.post_installation_job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: post-installation-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: job-creator
      containers:
      - name: post-installation-job
        image: {{ .Values.post_installation_job.image }}
        securityContext:
          privileged: true
        env: 
          - name: NAMESPACE
            value:  {{ .Release.Namespace }}
        workingDir: /app
        command:
        - "/bin/sh"
        - "-c"
        args:
        - |
          #!/bin/bash

          git clone https://github.com/openMF/ph-ee-env-labs.git
          cd ph-ee-env-labs/helm/es-secret/
          make secrets || echo "elastic-secrets" already exists
          
          cd ../../helm/kibana-secret
          make secrets || echo "kibana-secrets" already exists
          kubectl get secrets -n $NAMESPACE
          echo ---------------secrets created--------------- 
          sleep 20

          sleep 10
          SERVICE_HOST=${SERVICE_HOST:-"ph-ee-zeebe-ops"}
          SERVICE_PORT=${SERVICE_PORT:-"80"}
          until nc -z $SERVICE_HOST $SERVICE_PORT; do
            echo "Service $SERVICE_HOST:$SERVICE_PORT is not running. Checking again in 5 seconds..."
            sleep 5
          done


          echo ------zeebe-ops service available-----------
          sleep 10
          #Deploy BPMN 
          kubectl port-forward service/ph-ee-zeebe-ops 5000:80 -n $NAMESPACE &
          echo "sleeping to get portforwading ready"
          sleep 15
          cd ../../orchestration
          sleep 10
          sed -i "/HOST=/c\HOST=http://localhost:5000/zeebe/upload" deployBpmn.sh
          cat deployBpmn.sh
          cd ..
          timeout 180s sh orchestration/deployBpmn.sh && sleep 5 || echo 'deploy Bpmn done'
          echo "Removing ph-ee-env-labs directory"
          cd ..
          rm -rf ph-ee-env-labs
          echo ---------------------------successful--------------------------

      restartPolicy: Never
  backoffLimit: 0
{{- end }}
